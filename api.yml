
swagger: '2.0'
info:
  version: 1.0.0
  title: Confiscated Items for Cruise Landing
  description: Python Django + MySQL
  license:
    name: Software Architecture 2018-II
host: 192.168.99.101:3000
basePath: /confiscated_ms
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /items:
    post:
      summary: Creates a new item
      operationId: createItem
      parameters:
        - name: item
          in: body
          required: true
          description: Item Object
          schema:
            $ref: '#/definitions/ItemInput'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: Returns all items
      operationId: getAllItems
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/ItemsList'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /items/{id}:
    get:
      summary: Returns a course with the given code
      operationId: getItemsByCode
      parameters:
        - name: id
          in: path
          description: The id of the item to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Item'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      summary: Updates a item with the given id
      operationId: updateItem
      parameters:
        - name: id
          in: path
          description: The id of the item to be updated
          required: true
          type: integer
        - name: item
          in: body
          required: true
          description: Item Object
          schema:
            $ref: '#/definitions/ItemInput'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes a item with the given id
      operationId: deleteItem
      parameters:
        - name: id
          in: path
          description: The id of the item to be deleted
          required: true
          type: integer
      responses:
        '200':
          description: Ok
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

  /category:
    post:
      summary: Creates a new item
      operationId: createCategory
      parameters:
        - name: category
          in: body
          required: true
          description: Category Object
          schema:
            $ref: '#/definitions/CategoryInput'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: Returns all categories
      operationId: getAllCategories
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/CategoryList'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /category/{id}:
    get:
      summary: Returns a category with the given id
      operationId: getCategoryById
      parameters:
        - name: id
          in: path
          description: The id of the category to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Category'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      summary: Updates a category with the given id
      operationId: updateCategory
      parameters:
        - name: id
          in: path
          description: The id of the category to be updated
          required: true
          type: integer
        - name: category
          in: body
          required: true
          description: Category Object
          schema:
            $ref: '#/definitions/CategoryInput'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes a category with the given id
      operationId: deleteCategory
      parameters:
        - name: id
          in: path
          description: The id of the category to be deleted
          required: true
          type: integer
      responses:
        '200':
          description: Ok
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

  /delivery:
    post:
      summary: Creates a new delivery object
      operationId: createDelivery
      parameters:
        - name: delivery
          in: body
          required: true
          description: Delivery Object
          schema:
            $ref: '#/definitions/DeliveryInput'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: Returns all delivery objects
      operationId: getAllDelivery
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/DeliveryList'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /delivery/{id}:
    get:
      summary: Returns a delivery object with the given id
      operationId: getDeliveryById
      parameters:
        - name: id
          in: path
          description: The id of the delivery object to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Delivery'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      summary: Updates a delivery object with the given id
      operationId: updateDelivery
      parameters:
        - name: id
          in: path
          description: The id of the delivery object to be updated
          required: true
          type: integer
        - name: delivery
          in: body
          required: true
          description: Delivery Object
          schema:
            $ref: '#/definitions/DeliveryInput'
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes a delivery object with the given id
      operationId: deleteDelivery
      parameters:
        - name: id
          in: path
          description: The id of the delivery object to be deleted
          required: true
          type: integer
      responses:
        '200':
          description: Ok
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

definitions:

  # Items
  Item:
    type: object
    properties:
      id:
        type: integer
        minimum: 1
        description: Item id
      name:
        type: string
        description: Item name
      confiscation:
        type: string
        format: date-time
        description: Confiscation date
      weigth:
        type: number
        minimum: 1
        format: float
      quantity:
        type: integer
      category:
        $ref: '#/definitions/Category'
      passenger:
        type: integer
        minimum: 1
        description: Passenger Id
      
  ItemInput:
    type: object
    properties:
      name:
        type: string
        description: Item name
      confiscation:
        type: string
        format: date-time
        description: Confiscation date
      weigth:
        type: number
        minimum: 1
        format: float
      quantity:
        type: integer
      category:
        $ref: '#/definitions/Category'
      passenger:
        type: integer
        minimum: 1
        description: Passenger Id

  ItemsList:
    type: object
    required:
      - list
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/Item'
          
  # Items
  Category:
    type: object
    properties:
      id:
        type: integer
        minimum: 1
        description: Category id
      name:
        type: string
        description: Category name
      description:
        type: string
        description: Category description
      recoverable:
        type: boolean
        default: True
      category:
        $ref: '#/definitions/Delivery'
      
  CategoryInput:
    type: object
    properties:
      name:
        type: string
        description: Category name
      description:
        type: string
        description: Category description
      recoverable:
        type: boolean
        default: True
      category:
        $ref: '#/definitions/Delivery'

  CategoryList:
    type: object
    required:
      - list
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/Delivery'
      
  # Items
  Delivery:
    type: object
    properties:
      id:
        type: integer
        minimum: 1
        description: Delivery id
      open_time:
        type: string
        format: time
        description: Schedule open time
      close_time:
        type: string
        format: time
        description: Schedule open time
      delivery_point:
        type: string
        default: "NNN"
      
  DeliveryInput:
    type: object
    properties:
      open_time:
        type: string
        format: time
        description: Schedule open time
      close_time:
        type: string
        format: time
        description: Schedule open time
      delivery_point:
        type: string
        default: "NNN"

  DeliveryList:
    type: object
    required:
      - list
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/Delivery'
        
        
# Errors
  ErrorModel:
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: number
      description:
        type: object
